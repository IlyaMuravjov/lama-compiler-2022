-- Expression evaluator

import Binop;
import List;
import State;


-- The evaluator itself: takes a state and an expression,
-- returns integer value
--
-- An expression is represented by a data structure of the following shape:
--
-- expr = Var   (string)             |
--        Const (int)                |
--        Binop (string, expr, expr)

public fun evalExpr(s, expr) {
  case expr of
    Var(x)                    -> s(x)
    | Const(n)                -> n
    | Binop(op, expr1, expr2) -> evalBinop(op)(evalExpr(s, expr1), evalExpr(s, expr2))
  esac
}
